name: releaser

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+alpha[0-9]+"
      - "v[0-9]+.[0-9]+.[0-9]+beta[0-9]+"
      - "v[0-9]+.[0-9]+.[0-9]+rc[0-9]+"
      - "v[0-9]+.[0-9]+.[0-9]+"

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        include:
          - msystem: CLANG64
            arch: clang-x86_64
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: msys2/setup-msys2@v2
        with:
          msystem: ${{ matrix.msystem }}
          install: >-
            git
            mingw-w64-${{ matrix.arch }}-cmake
            mingw-w64-${{ matrix.arch }}-go
            mingw-w64-${{ matrix.arch }}-ninja
      - name: Run ninja
        shell: msys2 {0}
        run: |
          mkdir build
          cd build
          rm -rf CMakeCache.txt && cmake -GNinja -DCMAKE_BUILD_TYPE=Release .. && cmake --build .
      - name: Upload binaries
        uses: actions/upload-artifact@v2
        with:
          name: bin
          path: |
            build/bin/**/*
  create-release:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Get the version
        id: get_version
        run: echo ::set-output name=tag::${GITHUB_REF/refs\/tags\//}
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Download artifacts
        uses: actions/download-artifact@v2
      - name: Create package
        run: |
          cd bin
          zip -r ../assets.zip *
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: true
          prerelease: false
          body: |
            ### ダウンロード
            
            - [forcepser_${{ steps.get_version.outputs.tag }}.zip](https://github.com/oov/forcepser/releases/download/${{ steps.get_version.outputs.tag }}/forcepser_${{ steps.get_version.outputs.tag }}.zip)
            
            ### 変更点
            
            - ＊＊＊＊
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./assets.zip
          asset_name: forcepser_${{ steps.get_version.outputs.tag }}.zip
          asset_content_type: application/zip
